data = r4p_posts.df,
type = 'p',
pch = "|",
cex = 5,
col = "darkblue",
alpha = 1/3,
xlab = "",
ylab = "",
main = "R for Photobiology: Published Posts and Pages",
scales = list(x = list(cex = 1.4), y = list(draw = FALSE)),
strip = FALSE,  # Removes strip labels
axis.line = list(col = "transparent"),
layout = c(1, 1),  # Single panel
par.settings = list(
strip.border = list(col = "transparent"), #making the border transparent
axis.line = list(col = "transparent") #making the axes transparent
)
)
r4p_posts.df
View(r4p_posts.df)
posts[[1]]
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::arrange(date)
url_root <- "https://www.r4photobiology.info/"
post.files <- list.files("~/R-web-blog/r4p-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::arrange(date)
today    <- lubridate::today()
min_date <- min(r4p_posts.df$date, na.rm = TRUE)
last_post <- lubridate::days(today - max(r4p_posts.df$date, na.rm = TRUE))
r4p_post_avg <- nrow(r4p_posts.df)/as.numeric(today - min_date) * 30
r4p_post_avg <- sprintf("%0.1f", r4p_post_avg)
r4p_postbtw <- as.numeric(today - min_date) / nrow(r4p_post_avg)
r4p_postbtw <- sprintf("%s", round(r4p_postbtw, digits = 0))
min_date
last_post
last_update <- lubridate::days(today - max(r4p_posts.df$date.modofied, na.rm = TRUE))
last_update <- lubridate::days(today - max(r4p_posts.df$date.modified, na.rm = TRUE))
last_update
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "illustrations/",
fig.retina = 3,
out.width = "100%"
)
all_pkgs.df <- tools::CRAN_package_db() |>
tibble::as_tibble()
all_pkgs.df |>
janitor::clean_names()  |>
dplyr::filter(grepl("Aphalo", author)) -> my_pkgs.df
my_pkgs.df |>
dplyr::filter(package != "ggrepel") |>
dplyr::select("R package" = package, Title = title, Version = version, Date = published, doi) -> my_pkgs_condensed.df
packages <- my_pkgs_condensed.df[["R package"]]
pkgs_hist.ls <- list()
dates <- lubridate::Date()
for (package in packages) {
temp <- packageRank::packageHistory(package, check.package = TRUE)
dates <- c(dates, temp[["Date"]])
pkgs_hist.ls[[package]] <- temp
}
dates <- sort(dates)
today    <- lubridate::today()
first_published <- dates[1]
last_update <- dates[length(dates)]
cran_updates_avg <- length(dates)/as.numeric(today - first_published) * 30
cran_updates_avg <- sprintf("%0.2f", cran_updates_avg)
cran_updates_btw <- as.numeric(today - first_published) / length(dates)
cran_updates_btw <- sprintf("%s", round(cran_updates_btw, digits = 0))
library(lattice)
cran_releases.df <- data.frame(dates, ones = 1)
# Assuming postdf is loaded and has a 'date' column
# trellis.par.set(background = list(col="transparent"))
xyplot(ones ~ dates,
data = cran_releases.df,
type = 'p',
pch = "|",
cex = 5,
col = "blue",
alpha = 1/3,
xlab = "",
ylab = "",
main = "R Packages: Published Updates at CRAN",
scales = list(x = list(cex = 1.4), y = list(draw = FALSE)),
strip = FALSE,  # Removes strip labels
axis.line = list(col = "transparent"),
layout = c(1, 1),  # Single panel
par.settings = list(
strip.border = list(col = "transparent"), #making the border transparent
axis.line = list(col = "transparent") #making the axes transparent
)
)
my_pkgs_condensed.df |>
dplyr::mutate(Title = paste("[", Title, "](", "https://doi.org/", doi, ")", sep = "")) |>
dplyr::select(-doi) |>
dplyr::arrange(desc(Date)) |>
knitr::kable()
find_key <- function(x, key){
j <- lapply(x, function(x){
k <- grep(sprintf("^%s:", key),
x, value = TRUE)
k <- gsub(sprintf("^%s: |'", key), "", k)
k[1]
})
unlist(j)
}
url_root <- "https://www.r4photobiology.info/"
post.files <- list.files("~/R-web-blog/r4p-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::arrange(date)
today    <- lubridate::today()
min_date <- min(r4p_posts.df$date, na.rm = TRUE)
last_post <- lubridate::days(today - max(r4p_posts.df$date, na.rm = TRUE))
last_update <- lubridate::days(today - max(r4p_posts.df$date.modified, na.rm = TRUE))
r4p_post_avg <- nrow(r4p_posts.df)/as.numeric(today - min_date) * 30
r4p_post_avg <- sprintf("%0.1f", r4p_post_avg)
r4p_postbtw <- as.numeric(today - min_date) / nrow(r4p_post_avg)
r4p_postbtw <- sprintf("%s", round(r4p_postbtw, digits = 0))
r4p_posts.df
data.frame(
Date = rev(r4p_posts.df$date),
Updated = rev(r4p_posts.df$date.modified),
Title = rev(r4p_posts.df$link)
) |>
knitr::kable()
url_root <- "https://www.r4photobiology.info/"
post.files <- list.files("~/R-web-blog/r4p-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::mutate(date.modified = ifelse(is.na(date.modified), date, date.modified)) |>
dplyr::arrange(date)
today    <- lubridate::today()
min_date <- min(r4p_posts.df$date, na.rm = TRUE)
last_post <- lubridate::days(today - max(r4p_posts.df$date, na.rm = TRUE))
last_update <- lubridate::days(today - max(r4p_posts.df$date.modified, na.rm = TRUE))
r4p_post_avg <- nrow(r4p_posts.df)/as.numeric(today - min_date) * 30
r4p_post_avg <- sprintf("%0.1f", r4p_post_avg)
r4p_postbtw <- as.numeric(today - min_date) / nrow(r4p_post_avg)
r4p_postbtw <- sprintf("%s", round(r4p_postbtw, digits = 0))
library(lattice)
r4p_posts.df$ones <- 1
# Assuming postdf is loaded and has a 'date' column
# trellis.par.set(background = list(col="transparent"))
xyplot(ones ~ date,
data = r4p_posts.df,
type = 'p',
pch = "|",
cex = 5,
col = "darkblue",
alpha = 1/3,
xlab = "",
ylab = "",
main = "R for Photobiology: Published Posts and Pages",
scales = list(x = list(cex = 1.4), y = list(draw = FALSE)),
strip = FALSE,  # Removes strip labels
axis.line = list(col = "transparent"),
layout = c(1, 1),  # Single panel
par.settings = list(
strip.border = list(col = "transparent"), #making the border transparent
axis.line = list(col = "transparent") #making the axes transparent
)
)
data.frame(
Date = rev(r4p_posts.df$date),
Updated = rev(r4p_posts.df$date.modified),
Title = rev(r4p_posts.df$link)
) |>
knitr::kable()
url_root <- "https://www.r4photobiology.info/"
post.files <- list.files("~/R-web-blog/r4p-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::mutate(date.modified = as.Daye(ifelse(is.na(date.modified), date, date.modified))) |>
dplyr::arrange(date)
url_root <- "https://www.r4photobiology.info/"
post.files <- list.files("~/R-web-blog/r4p-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::mutate(date.modified = as.Date(ifelse(is.na(date.modified), date, date.modified))) |>
dplyr::arrange(date)
today    <- lubridate::today()
min_date <- min(r4p_posts.df$date, na.rm = TRUE)
last_post <- lubridate::days(today - max(r4p_posts.df$date, na.rm = TRUE))
last_update <- lubridate::days(today - max(r4p_posts.df$date.modified, na.rm = TRUE))
r4p_post_avg <- nrow(r4p_posts.df)/as.numeric(today - min_date) * 30
r4p_post_avg <- sprintf("%0.1f", r4p_post_avg)
r4p_postbtw <- as.numeric(today - min_date) / nrow(r4p_post_avg)
r4p_postbtw <- sprintf("%s", round(r4p_postbtw, digits = 0))
data.frame(
Date = rev(r4p_posts.df$date),
Updated = rev(r4p_posts.df$date.modified),
Title = rev(r4p_posts.df$link)
) |>
knitr::kable()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "illustrations/",
fig.retina = 3,
out.width = "100%"
)
all_pkgs.df <- tools::CRAN_package_db() |>
tibble::as_tibble()
all_pkgs.df |>
janitor::clean_names()  |>
dplyr::filter(grepl("Aphalo", author)) -> my_pkgs.df
my_pkgs.df |>
dplyr::filter(package != "ggrepel") |>
dplyr::select("R package" = package, Title = title, Version = version, Date = published, doi) -> my_pkgs_condensed.df
packages <- my_pkgs_condensed.df[["R package"]]
pkgs_hist.ls <- list()
dates <- lubridate::Date()
for (package in packages) {
temp <- packageRank::packageHistory(package, check.package = TRUE)
dates <- c(dates, temp[["Date"]])
pkgs_hist.ls[[package]] <- temp
}
dates <- sort(dates)
today    <- lubridate::today()
first_published <- dates[1]
last_update <- dates[length(dates)]
cran_updates_avg <- length(dates)/as.numeric(today - first_published) * 30
cran_updates_avg <- sprintf("%0.2f", cran_updates_avg)
cran_updates_btw <- as.numeric(today - first_published) / length(dates)
cran_updates_btw <- sprintf("%s", round(cran_updates_btw, digits = 0))
library(lattice)
cran_releases.df <- data.frame(dates, ones = 1)
# Assuming postdf is loaded and has a 'date' column
# trellis.par.set(background = list(col="transparent"))
xyplot(ones ~ dates,
data = cran_releases.df,
type = 'p',
pch = "|",
cex = 5,
col = "blue",
alpha = 1/3,
xlab = "",
ylab = "",
main = "R Packages: Published Updates at CRAN",
scales = list(x = list(cex = 1.4), y = list(draw = FALSE)),
strip = FALSE,  # Removes strip labels
axis.line = list(col = "transparent"),
layout = c(1, 1),  # Single panel
par.settings = list(
strip.border = list(col = "transparent"), #making the border transparent
axis.line = list(col = "transparent") #making the axes transparent
)
)
my_pkgs_condensed.df |>
dplyr::mutate(Title = paste("[", Title, "](", "https://doi.org/", doi, ")", sep = "")) |>
dplyr::select(-doi) |>
dplyr::arrange(desc(Date)) |>
knitr::kable()
find_key <- function(x, key){
j <- lapply(x, function(x){
k <- grep(sprintf("^%s:", key),
x, value = TRUE)
k <- gsub(sprintf("^%s: |'", key), "", k)
k[1]
})
unlist(j)
}
url_root <- "https://www.r4photobiology.info/"
post.files <- list.files("~/R-web-blog/r4p-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
r4p_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
slug = find_key(posts, "slug") |>
gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/r4p-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::mutate(date.modified = as.Date(ifelse(is.na(date.modified), date, date.modified))) |>
dplyr::arrange(date)
today    <- lubridate::today()
min_date <- min(r4p_posts.df$date, na.rm = TRUE)
last_post <- lubridate::days(today - max(r4p_posts.df$date, na.rm = TRUE))
last_update <- lubridate::days(today - max(r4p_posts.df$date.modified, na.rm = TRUE))
r4p_post_avg <- nrow(r4p_posts.df)/as.numeric(today - min_date) * 30
r4p_post_avg <- sprintf("%0.1f", r4p_post_avg)
r4p_postbtw <- as.numeric(today - min_date) / nrow(r4p_post_avg)
r4p_postbtw <- sprintf("%s", round(r4p_postbtw, digits = 0))
library(lattice)
r4p_posts.df$ones <- 1
# Assuming postdf is loaded and has a 'date' column
# trellis.par.set(background = list(col="transparent"))
xyplot(ones ~ date,
data = r4p_posts.df,
type = 'p',
pch = "|",
cex = 5,
col = "darkblue",
alpha = 1/3,
xlab = "",
ylab = "",
main = "R for Photobiology: Published Posts and Pages",
scales = list(x = list(cex = 1.4), y = list(draw = FALSE)),
strip = FALSE,  # Removes strip labels
axis.line = list(col = "transparent"),
layout = c(1, 1),  # Single panel
par.settings = list(
strip.border = list(col = "transparent"), #making the border transparent
axis.line = list(col = "transparent") #making the axes transparent
)
)
data.frame(
Date = rev(r4p_posts.df$date),
Updated = rev(r4p_posts.df$date.modified),
Title = rev(r4p_posts.df$link)
) |>
knitr::kable()
url_root <- "https://www.photo-spectrum.info/"
post.files <- list.files("~/R-web-blog/photo-spectrum-blog/",
".*qmd$",
recursive = TRUE,
full.names = TRUE)
post.files <- grep("_extensions", x = post.files, value = TRUE, invert = TRUE)
posts <- lapply(post.files, readLines)
photo_posts.df <- tibble::tibble(
n = seq_along(posts),
draft = find_key(posts, "draft") |>
grepl(pattern = "true", x = _),
date = lubridate::ymd(find_key(posts, "date")),
date.modified = lubridate::ymd(find_key(posts, "date-modified")),
# slug = find_key(posts, "slug") |>
#   gsub('\\"', "", x = _),
title = find_key(posts, "title"),
post.url = paste(url_root,
gsub("C:/Users/Aphalo/Documents/R-web-blog/photo-spectrum-blog/|\\.qmd",
"", post.files),
".html",
sep = ""),
link = paste("[", title, "]", "(", post.url, ")", sep = "")
) |>
subset(subset = !draft & !is.na(date)) |> # date is NA for indexes and home
dplyr::mutate(date.modified = as.Date(ifelse(is.na(date.modified), date, date.modified))) |>
dplyr::arrange(date)
today    <- lubridate::today()
min_date <- min(photo_posts.df$date, na.rm = TRUE)
last_post <- lubridate::days(today - max(photo_posts.df$date, na.rm = TRUE))
photo_post_avg <- nrow(photo_posts.df)/as.numeric(today - min_date) * 30
photo_post_avg <- sprintf("%0.1f", photo_post_avg)
photo_postbtw <- as.numeric(today - min_date) / nrow(r4p_post_avg)
photo_postbtw <- sprintf("%s", round(photo_postbtw, digits = 0))
library(lattice)
photo_posts.df$ones <- 1
# Assuming postdf is loaded and has a 'date' column
# trellis.par.set(background = list(col="transparent"))
xyplot(ones ~ date,
data = photo_posts.df,
type = 'p',
pch = "|",
cex = 5,
col = "orange",
apha = 1/2,
xlab = "",
ylab = "",
main = "Photo Rumblings and Whispers: Published Posts and Pages",
scales = list(x = list(cex = 1.4), y = list(draw = FALSE)),
strip = FALSE,  # Removes strip labels
axis.line = list(col = "transparent"),
layout = c(1, 1),  # Single panel
par.settings = list(
strip.border = list(col = "transparent"), #making the border transparent
axis.line = list(col = "transparent") #making the axes transparent
)
)
data.frame(
Date = rev(photo_posts.df$date),
Updated = rev(r4p_posts.df$date.modified),
Title = rev(photo_posts.df$link)
) |>
knitr::kable()
data.frame(
Date = rev(photo_posts.df$date),
Updated = rev(photo_posts.df$date.modified),
Title = rev(photo_posts.df$link)
) |>
knitr::kable()
